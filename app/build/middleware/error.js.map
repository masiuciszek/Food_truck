{"version":3,"file":"error.js","sourceRoot":"","sources":["../../src/middleware/error.ts"],"names":[],"mappings":";;;AAEA,0DAAuD;AAE1C,QAAA,YAAY,GAAG,CAC1B,GAAkB,EAClB,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,IAAI,KAAK,qBAAQ,GAAG,CAAE,CAAC;IACvB,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;IAE5B,gBAAgB;IAChB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAE7B,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;QACxB,MAAM,OAAO,GAAG,6BAA6B,CAAC;QAC9C,KAAK,GAAG,IAAI,6BAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;KACzC;IAED,GAAG;SACA,MAAM,CAAC,KAAK,CAAC,UAAU,IAAI,GAAG,CAAC;SAC/B,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,IAAI,iBAAiB,EAAE,CAAC,CAAC;IAEvE,IAAI,EAAE,CAAC;AACT,CAAC,CAAC","sourcesContent":["import { UV_FS_O_FILEMAP } from 'constants';\nimport { NextFunction, Request, Response } from 'express';\nimport { ErrorResponse } from '../utils/errorResponse';\n\nexport const errorHandler = (\n  err: ErrorResponse,\n  req: Request,\n  res: Response,\n  next: NextFunction,\n) => {\n  let error = { ...err };\n  error.message = err.message;\n\n  // TODO: DELETE!\n  console.log('ERROR ', error);\n\n  if (error.code === 11000) {\n    const message = 'You are already registered!';\n    error = new ErrorResponse(message, 404);\n  }\n\n  res\n    .status(error.statusCode || 500)\n    .json({ success: false, error: error.message || 'SERVER_ERROR!!!' });\n\n  next();\n};\n"]}